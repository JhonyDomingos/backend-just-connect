// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(uuid())
  name                String?   @db.VarChar(100)
  username            String    @unique @db.VarChar(20)
  email               String    @unique
  password            String
  bio_description     String?   @db.VarChar(140)
  role                String    @default("user")
  admin_user_block    Boolean   @default(false)
  linkedin            String?
  instagram           String?
  github              String?
  user_created_at     DateTime  @default(now())
  user_updated_at     DateTime  @updatedAt
  posts               Post[]
  comments            Comment[]

  @@map("users")
}

model Post {
  id                  String    @id @default(uuid())
  user                User      @relation(fields: [user_id], references: [id])
  user_id             String
  title               String    @db.VarChar(50)
  description         String    @db.Text
  statusOpen          Boolean   @default(true)
  post_created_at     DateTime  @default(now())
  post_updated_at     DateTime  @updatedAt
  admin_post_block    Boolean   @default(false)
  comment             Comment[]
  tags                Tag[]

  @@map("posts")
}

model Comment {
  id                  String    @id @default(uuid())
  user                User      @relation(fields: [user_id], references: [id])
  user_id             String   
  post                Post      @relation(fields: [post_id], references: [id])
  post_id             String
  comment             String    @db.Text
  score               Int       @default(0)
  comment_created_at  DateTime  @default(now())
  comment_updated_at  DateTime  @updatedAt
  admin_comment_block Boolean   @default(false)

  @@map("comments")
}

model Tag {
  id                  String   @id @default(uuid())
  tag                 String   @db.VarChar(15)
  posts               Post[]   

  @@map("tags")
}

enum Role {
  USER
  ADMIN
}